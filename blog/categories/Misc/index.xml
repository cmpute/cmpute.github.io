<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Misc on JacobZ</title><link>https://zyxin.xyz/blog/categories/Misc/</link><description>Recent content in Misc on JacobZ</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 20 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://zyxin.xyz/blog/categories/Misc/index.xml" rel="self" type="application/rss+xml"/><item><title>冬日取暖最佳方式 — 利用闲置的计算资源</title><link>https://zyxin.xyz/blog/2021-11/UtilizeYourComputationPower/</link><pubDate>Sat, 20 Nov 2021 00:00:00 +0000</pubDate><guid>https://zyxin.xyz/blog/2021-11/UtilizeYourComputationPower/</guid><description>&lt;img src="https://zyxin.xyz/blog/2021-11/UtilizeYourComputationPower/primenet-ranking.png" alt="Featured image of post 冬日取暖最佳方式 — 利用闲置的计算资源" />&lt;p>最近突发奇想，想到自己有几台电脑，性能都不错但是经常闲置，包括实验室的服务器也不是每时每刻都在充分利用资源，因此完全可以跑一些别的程序来利用。我最先想到的就是以前做电脑压力测试的Prime95程序，然后一搜发现这里面还是有不少门道的。本文介绍一下如何利用你家电脑闲置的性能,将其贡献给科学事业，并且在冬天的夜晚让它的散热成为一大取暖来源~哈哈哈哈&lt;/p>
&lt;h2 id="gimps">GIMPS&lt;/h2>
&lt;p>我最先测试的程序是Prime95，Prime95是梅森素数搜索计划（Great Internet Mersenne Prime Search, GIMPS）的Windows客户端。这个计划旨在利用互联网的计算资源来寻找梅森素数。形如$2^p-1$（$p$为素数）的数被称为梅森数，如果这个梅森数也是素数那么就被称为梅森素数。梅森素数是目前寻找大素数最高效的目标，人类发现最大的质数前几名都来自于GIMPS发现的梅森素数。&lt;/p>
&lt;p>如果你不想知道很多信息，只想直接开冲，那么你只需要从&lt;a class="link" href="https://www.mersenne.org/download/" target="_blank" rel="noopener"
>GIMPS官网&lt;/a>下载Prime95（Windows）/ mprime（Linux），解压后双击直接开跑就可以了。如果你希望了解这个程序具体在干什么，或者想青史留名找到新的梅森素数，那么请接着往下读这一节~&lt;/p>
&lt;h3 id="primenet">PrimeNet&lt;/h3>
&lt;p>首先需要介绍一下GIMPS的分布式计算网络，名字叫PrimeNet。PrimeNet负责分发计算任务和收集计算结果。由于梅森素数的形式是$2^p-1$，因此PrimeNet中把$p$称为Exponent（指数），验证每个指数对应的梅森数是否为素数是独立的。目前PrimeNet中对于每个指数有如下几种计算任务，括号内为PrimeNet中的缩写：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Trial Factor&lt;/strong> (TF): 暴力遍历素数，测试每个素数是否是当前梅森数的因数。&lt;/li>
&lt;li>&lt;strong>P-1 Test&lt;/strong> (PM1): &lt;a class="link" href="https://en.wikipedia.org/wiki/Pollard%27s_p_%E2%88%92_1_algorithm" target="_blank" rel="noopener"
>Pollard $p-1$&lt;/a>测试法，可以在一定范围内寻找到一个因数$q$，前提是$q-1$是&lt;em>高度复合的&lt;/em>（也被称为&lt;em>smooth&lt;/em>，意思是由很多很多小的质因数合成的合数）&lt;/li>
&lt;li>&lt;strong>P+1 Test&lt;/strong> (PP1): &lt;a class="link" href="https://en.wikipedia.org/wiki/Williams%27s_p_%2B_1_algorithm" target="_blank" rel="noopener"
>Williams $p+1$&lt;/a>测试法，跟P-1测试类似，但是寻找的因数$q$需满足$q+1$高度复合。&lt;/li>
&lt;li>&lt;strong>Lucas-Lehmer Test&lt;/strong> (LL): 一种验证梅森数是否为质数的算法，该算法虽然很简单，但是非常耗时。&lt;/li>
&lt;li>&lt;strong>Double Check&lt;/strong> (D): 由于计算机在运算过程中可能会非常罕见地产生差错（这也是为什么人们需要ECC内存），因此为了确保素性判断正确，PrimeNet会让另外一台计算机重新计算Lucas-Lehmer，但是使用不同的初始参数，以验证计算的正确性。&lt;/li>
&lt;li>&lt;strong>Probable Prime Test&lt;/strong> (PRP): 这个测试是一种Fermat测试，但是使用了一种改进的验证方法。该算法会在测试过程中生成一个无法仿造的&lt;em>证明文件&lt;/em>，这个证明文件可以由另一台计算机很快验证，大大减少了运算量。（但是好像这个算法只能得到Probable Prime，最后的验证应该还是需要使用Lucas-Lehmer）&lt;/li>
&lt;li>&lt;strong>Proof Verification&lt;/strong> (CERT): 即验证PRP生成的证明的任务&lt;/li>
&lt;/ul>
&lt;p>除了这些任务之外，PrimeNet还衍生出了因数分解的任务，即尝试对质数验证失败的梅森数进行完整因数分解，在这个过程中也有可能发现非常大的质数，被称为co-factor。因数分解任务有如下两种：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Elliptic Curve Factorization&lt;/strong> (ECM): 利用椭圆曲线分解法进行因数分解，可以寻找一定范围以内的因数&lt;/li>
&lt;li>&lt;strong>Probable Prime Cofactor Test&lt;/strong> (PRP-CF): 对于梅森数除去找到的因数还剩下的因数进行素性测试，这个剩下的数通常仍然非常大，因为因数分解的方法通常只能找到几十位的因数，再大的因数实在太难计算了。
目前PrimeNet中因数分解的任务只分配给指数为四千万以下的梅森数。另外，以上这些任务只是大类，实际上PrimeNet中的任务划分更细一点，比如TF会分为普通TF和TF-LMH，后者优先选择TF进展比较小的指数进行分解。&lt;/li>
&lt;/ul>
&lt;p>PrimeNet中目前验证一个梅森数的完整流程大概如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">TF 2~2^63 -&amp;gt; TF 2^63 ~ 2^64 -&amp;gt; ... -&amp;gt; TF到2^78左右 -&amp;gt; PM1 -&amp;gt; PRP
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将验证分为这么多步的原因主要还是为了减少计算量，TF和PM1在测试小因数的时候比较快，而Lucas-Lehmer虽然可以直接测试梅森数的素性，但是用TF和PM1粗筛可以大大减少计算量。这里TF计算的上限和PM1测试的范围都是PrimeNet根据找到因数的概率和计算耗时之间权衡之后算出来的。&lt;/p>
&lt;p>在早期PRP证明的算法还没有出现的时候（2020年以前），完整流程实际上是&lt;code>TF -&amp;gt; PM1 -&amp;gt; LL -&amp;gt; DC&lt;/code>，因此目前PrimeNet还有大量积攒的LL测试没有被双重验证果，因此目前发现的梅森素数M74207281、M77232917、M82589933的顺位还没有被确定。&lt;/p>
&lt;p>PrimeNet的整体进展可以在&lt;a class="link" href="https://www.mersenne.org/primenet/" target="_blank" rel="noopener"
>GIMPS官网的任务分配表中&lt;/a>中查看，这个表中展示了每一个范围中指数的状态。&lt;/p>
&lt;blockquote>
&lt;p>最右边的一大列&lt;code>Available&lt;/code>指的是还没有被认领的任务，右边第二列&lt;code>Assigned&lt;/code>指的是已被认领的任务，左边&lt;code>Composite&lt;/code>里面F指的是找到因数的梅森数、DC指的是验证过的LL/PRP测试为合数的梅森数，右边&lt;code>Status Unproven&lt;/code>中LL/PRP这一列指的是LL测试还没有被验证的指数，ERR指的是LL计算中出现错误的，而NO-LL则是完成了P-1测试后还没有经过LL/PRP测试的指数。&lt;/p>
&lt;/blockquote>
&lt;h3 id="客户端">客户端&lt;/h3>
&lt;p>在了解了计算任务的种类之后，接下来就是选择下载合适的客户端了。GIMPS除了官方的Prime95之外还有不少第三方实现的客户端。如果你想用CPU跑的话，直接使用官方的Prime95/mprime客户端即可；如果你的电脑有GPU，那么你可以选择GPU客户端，比较常用的有mfaktc (NVIDIA) / mfakto (AMD) / gpuowl (通用)。我主要使用的是gpuowl，因为它的代码最近仍然有更新，编译方便，并且支持P-1和PRP测试，而mfaktc和mfakto只能进行TF。不过gpuowl在windows上不太好编译。还有一些其他的GPU客户端，具体可以参考&lt;a class="link" href="https://www.mersenneforum.org/showpost.php?p=488289&amp;amp;postcount=1" target="_blank" rel="noopener"
>GIMPS论坛的这个介绍贴&lt;/a>。&lt;/p>
&lt;p>在使用客户端之前，首先可以在GIMPS官网上注册一个账户，这个账户即你在PrimeNet中的账户，在使用客户端的时候把用户名提供给客户端，这样可以让PrimeNet统计你的贡献。PrimeNet的贡献统计以GHz-days（GHD）为单位，每个任务的GHD数值通过一定的公式进行估算的，并不是直接统计你的CPU频率乘上你所花费的时间。据我的经验，如果你想拥有最高的GHD/day，使用CPU和GPU比较划算的都是TF任务。&lt;/p>
&lt;p>另外注册账户之后，你还可以选择一个Team加入，这样你的贡献值同样会被计算到Team中。目前我加入的GIMPSChina团队近年的贡献量排名第三，可喜可贺！&lt;/p>
&lt;p>&lt;img src="https://zyxin.xyz/blog/blog/2021-11/UtilizeYourComputationPower/primenet-ranking.png"
width="1212"
height="191"
loading="lazy"
alt="GIMPSChina排名"
class="gallery-image"
data-flex-grow="634"
data-flex-basis="1522px"
>&lt;/p>
&lt;p>关于客户端的使用上，各个客户端基本都是解压之后即可使用，或者编译后使用。使用Prime95客户端的话程序会自动下载新的计算任务，你只需要设置CPU和内存的占用情况即可。如果你要跑TF/DC/PRP任务，那么只需要设置线程数即可，如果要跑PM1，那么需要设置内存上限至少为1G，并且越高越好。内存的设置在菜单里Resource Limit一栏的Advanced项目里面。而用gpuowl的话需要手动申请任务，在&lt;a class="link" href="https://github.com/preda/gpuowl#usage" target="_blank" rel="noopener"
>Github主页上有说明具体的使用方法&lt;/a>。注意新的PrimeNet账户在一段时间（两三天）内是没法提交手动申请任务的结果的，需要管理员审核后才能提交，原因是之前有人恶意提交错误结果，具体情况参见&lt;a class="link" href="https://www.mersenneforum.org/showthread.php?t=24103&amp;amp;page=14" target="_blank" rel="noopener"
>这个GIMPS论坛的帖子&lt;/a>。&lt;/p>
&lt;h3 id="其他素数寻找项目">其他素数寻找项目&lt;/h3>
&lt;p>GIMPS是最早的互联网寻找素数的项目，后来受GIMPS的影响产生了很多新的项目，例如&lt;a class="link" href="https://srbase.my-firewall.org/sr5/" target="_blank" rel="noopener"
>SRBase&lt;/a>，&lt;a class="link" href="https://www.gpu72.com/" target="_blank" rel="noopener"
>GPU72&lt;/a>以及PrimeGrid。SRBase旨在寻找形如$k*b^n\pm 1$的素数，其中$k$为偶数，$b$为基；GPU72旨在利用GPU扩大梅森数的分解范围（提高到10亿，PrimeNet目前只搜索到1亿）；PrimeGrid则是一系列质数寻找项目的集合。这些项目之间通常会相互分享因数分解的结果。另外，在&lt;a class="link" href="https://primes.utm.edu/" target="_blank" rel="noopener"
>PrimePages&lt;/a>网站上有统计目前已知的各个形式的最大质数，在&lt;a class="link" href="https://www.mersenne.ca/" target="_blank" rel="noopener"
>Mersenne.ca&lt;/a>网站上有更详细的梅森数计算结果统计。&lt;/p>
&lt;h2 id="boinc">BOINC&lt;/h2>
&lt;p>除了GIMPS之外另一个更广为人知的志愿科学计算项目则是伯克利的Berkeley Open Infrastructure for Network Computing (BOINC)。这一项目给科学计算提供了统一的计算分发框架，里面有不少大型合作项目，涵盖数学、物理、天文、生物等多方面。&lt;/p>
&lt;h3 id="使用教程">使用教程&lt;/h3>
&lt;p>参与BOINC的计算就更加简单了，首先你需要安装一个BOINC客户端，在&lt;a class="link" href="https://boinc.berkeley.edu/download.php" target="_blank" rel="noopener"
>官网上可以下载到&lt;/a>。在安装完成之后，只需要在项目列表里面选择自己喜欢的项目即可参加。通常每个项目都有自己的网站，并且你需要在网站上注册账号，以便于该项目追踪你的贡献，这个步骤在你选择想参加的项目之后会提示你进行操作。参加项目之后，BOINC便会开始自动分配你可以参加的项目。&lt;/p>
&lt;p>BOINC客户端同样支持资源占用的限制，并且支持在电脑有操作的时候暂停计算任务，更加便于你利用电脑的空闲时间进行计算了。BOINC相关项目的贡献，除了每个网站自己的统计外，还可以在第三方网站（如&lt;a class="link" href="https://stats.free-dc.org/" target="_blank" rel="noopener"
>Free-DC&lt;/a>和&lt;a class="link" href="https://www.boincstats.com/stats/" target="_blank" rel="noopener"
>BOINCStats&lt;/a>）上查到。&lt;/p>
&lt;h3 id="gridcoin">GridCoin&lt;/h3>
&lt;p>另外BOINC还有一个很吸引人的地方是，有一款加密货币叫&lt;a class="link" href="https://gridcoin.us/" target="_blank" rel="noopener"
>GridCoin&lt;/a>是专门设计用来回报BOINC参与者的。因此如果你参加了GridCoin的计算池，那么你为科学事业贡献的算力实际上也是在挖矿！算力和电力的无用消耗是我不喜欢加密货币，尤其是比特币的最大原因，而设计在BOINC之上的GridCoin则完美解决了这个问题，并且GridCoin基于Proof of Stake，而不是现在比特币和以太坊使用的Proof of Work，更加降低了额外的计算资源消耗。因此如果你愿意参与BOINC的话，可以考虑同时利用GridCoin来回馈自己。&lt;/p>
&lt;p>在使用方法上，如果你是首次参加GridCoin，那么你需要利用GridCoin的计算池来进行挖矿，这个模式被称为Pool Crunching，除了安装BOINC之外你还需要在BOINC客户端中选择GridCoin支持的项目管理器（我选择的是grcpool），这样你的计算贡献会被归到GridCoin计算池的名下，而这个计算池会根据你的贡献分配GridCoin。当你有了GridCoin之后你也可以选择独立进行计算而不依赖于计算池，这个被称为Solo Crunching，这个情况下你的计算贡献也会直接被各个项目统计到。具体的使用方法还请参考&lt;a class="link" href="https://gridcoin.us/" target="_blank" rel="noopener"
>GridCoin官网&lt;/a>&lt;/p>
&lt;hr>
&lt;p>在了解这些的过程中，我还发现了一个聚集了国内志愿计算爱好者的论坛——&lt;a class="link" href="https://equn.com/forum/" target="_blank" rel="noopener"
>中国分布式计算论坛&lt;/a>，这里面有很多BOINC和GIMPS的贡献者，他们会交流项目参与方法、项目更新等。看到有这么多人愿意给科学事业贡献自己的算力我还是感到很开心的，如果感兴趣的话欢迎加入这些科学计算项目~&lt;/p></description></item><item><title>MegaFavNumbers - 最喜爱的百万数字</title><link>https://zyxin.xyz/blog/2021-07/MegaFavNumbers/</link><pubDate>Sun, 11 Jul 2021 00:00:00 +0000</pubDate><guid>https://zyxin.xyz/blog/2021-07/MegaFavNumbers/</guid><description>&lt;p>这篇博客也是拖了很久了，简直是蹭热度都蹭不到热的。。。去年年底有一帮数学家和喜欢数学的人（Numberphile）发起了一个Youtube系列，叫&lt;a class="link" href="https://www.youtube.com/hashtag/megafavnumbers" target="_blank" rel="noopener"
>#MegaFavNumbers&lt;/a>，也就是介绍自己最喜欢的大于一百万的数字。虽然没有要求这个数字是整数，但是Numberphile一般只关注整数（甚至仅自然数）。如果没有这个限制的话，那物理化学上就有很多常数了，例如某视频评论区有人提到阿伏伽德罗常数23333&lt;/p>
&lt;p>如果让我来选的话我还真想不太出来，毕竟没学多少数学，顶多会选$2^{32}$这种程序员知道的数字，或者已知最大的质数、孪生质数云云。这个题目真的是很有意思了，很多有特殊性质的数字或者是某数列的第一个数都会比较小，很少会有一个非常大并且独一无二的数字，因此看了3Blue1Brown的视频之后我顿时就来了兴趣，&lt;del>准备&lt;/del>写下这篇博客介绍以下各博主选择的数字，又了解一些平常不知道的冷知识~哈哈。我大致将这些数字分了个类，不过不是很严格。&lt;/p>
&lt;h2 id="某特殊数列中第一个超过1m的">某特殊数列中第一个超过1M的&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=b1wWGRZ9YTE" target="_blank" rel="noopener"
>3 628 800&lt;/a> by @Peter Pike：第一个超过1M的阶乘。作者讲了一堆和阶乘有关的可视化，但是数字本身其实比较直观了。&lt;/li>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=dJ6pej8SihI" target="_blank" rel="noopener"
>10&lt;sup>69&lt;/sup>+69&lt;/a> by @Kevin Du：$10^x+x$数列中第个3质数（前两个是$10^1+1$，$10^9+9$），即&lt;a class="link" href="https://oeis.org/A089379" target="_blank" rel="noopener"
>OEIS数列A089379&lt;/a>的第三个数 （不是很知道为什么没有选$10^9+9$ ┑(￣Д ￣)┍）&lt;/li>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=A7eJb8n8zAw" target="_blank" rel="noopener"
>≈1.1698e45&lt;/a> by @Stand-up Maths：满足$\tan( p )&amp;gt;p$的第一个质数p，即&lt;a class="link" href="https://oeis.org/A249836" target="_blank" rel="noopener"
>OEIS数列A249836&lt;/a>中的第一个质数。&lt;/li>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=Z3xq4ODNeZs&amp;amp;t=208s" target="_blank" rel="noopener"
>$C^{104}_{39}$&lt;/a> by @Zoe Griffiths：在杨辉三角里出现超过5次的数中，大于1M的第一个数。神奇的是前一个数是24310，然后突然就变得很大了！&lt;/li>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=a9k_QmZbwX8" target="_blank" rel="noopener"
>640 320&lt;sup>3&lt;/sup>&lt;/a> by @Richard E. BORCHERDS：$\approx e^{\pi\sqrt{163}}-744$。取这个数的原因是它与$e^{\pi\sqrt{67}}-744$和$e^{\pi\sqrt{93}}-744$都神奇地非常接近一个整数，其背后的原因跟椭圆模函数$1/q+744+196884q+21493760q^2+&amp;hellip;$有关。这个数由传奇印度数学家Srinivasa Ramanujan发现，也被称为Ramanujan常数，计算这个数需要支持任意精度浮点运算的计算器。&lt;/li>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=kIE2JZTwv_k" target="_blank" rel="noopener"
>23 240 400&lt;sub>6&lt;/sub> = 720 720&lt;sub>10&lt;/sub>&lt;/a> by jan Misali：即六进制表示的720720。720720是接近1M的超级合数（令$d(n)$表示$n$的因数个数，$f_\epsilon(n)=d(n)/n^\epsilon$，超级合数则是满足$\forall k\in\mathbb{Z}^+$, $k&amp;lt; n, d(n)&amp;gt;d(k), f_\epsilon(n)\geq f_\epsilon(k)$的数$n$），即&lt;a class="link" href="https://oeis.org/A002201" target="_blank" rel="noopener"
>OEIS数列A002201&lt;/a>中接近1M的一个很满足强迫症的数。博主为了让它超过1M换成了6进制哈哈哈哈。&lt;/li>
&lt;/ul>
&lt;h2 id="某特殊数列最后一个数">某特殊数列最后一个数&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=5BFDdVqAFZE" target="_blank" rel="noopener"
>73 939 133&lt;/a> by @Flammable Maths: 最大的可右截断素数（right truncatable prime），即&lt;a class="link" href="http://oeis.org/A024770" target="_blank" rel="noopener"
>OEIS数列&lt;/a>最后一个数。&lt;/li>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=lKjR60jkUQE" target="_blank" rel="noopener"
>≈1.151322e38&lt;/a> by @Normalized Nerd：十进制下最后一个水仙花数，即&lt;a class="link" href="http://oeis.org/A005188" target="_blank" rel="noopener"
>OEIS数列A005188&lt;/a>最后一个数。&lt;/li>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=RAKWgYDcB4k" target="_blank" rel="noopener"
>$3\times2^{402653209}-1$&lt;/a> by @timpa&amp;rsquo;s videos: 从4开始的Goodstein序列的最大一个数，即&lt;a class="link" href="http://oeis.org/A005188" target="_blank" rel="noopener"
>OEIS数列A056193&lt;/a>中最大数。&lt;/li>
&lt;/ul>
&lt;h2 id="某猜想的第一个正例或者反例">某猜想的第一个正例或者反例&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=eQCUPQdi6DY" target="_blank" rel="noopener"
>906 150 257&lt;/a> by @SparksMaths：&lt;a class="link" href="https://en.wikipedia.org/wiki/P%C3%B3lya_conjecture" target="_blank" rel="noopener"
>Pólya猜想&lt;/a>的最小反例。&lt;a class="link" href="https://www.zhihu.com/question/37164066/answer/71589759" target="_blank" rel="noopener"
>这里有个知乎回答提到了这个例子&lt;/a>。&lt;/li>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=R2eQVqdUQLI" target="_blank" rel="noopener"
>666 030 256, 696 630 544&lt;/a> by @singingbanana：偶亲和数猜想：“偶数亲和数之和为9的倍数”的第一个反例。（亲和数对：A的所有真因数之和等于B，B的所有真因数之和等于A）&lt;/li>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=vv0bHK44Q1s" target="_blank" rel="noopener"
>569 936 821 221 962 380 720&lt;/a> by @Numberphile：一个著名猜想的任意整数可以写成三个整数的三次方之和，其中$3=x^3+y^3+z^3$的解除了(1,1,1)，(4,4,-5)外找到的第三个解中的正数即为博主选择的数。&lt;/li>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=L4ArlAfKTLA" target="_blank" rel="noopener"
>≈8.42443e51&lt;/a> by @WillsWei：使得$n^{17}+9$和$(n+1)^{17}+9$不互质的第一个$n$。&lt;/li>
&lt;/ul>
&lt;h2 id="来自非数学领域的数">来自非数学领域的数&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=bknybcgfjAk" target="_blank" rel="noopener"
>1 094 795 585&lt;/a> by @LiveOverflow：&lt;code>0x41414141&lt;/code>，即ASCII码表示的&lt;code>AAAA&lt;/code>，被视作缓存溢出的标志&lt;/li>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=pCNVkUYUnrY" target="_blank" rel="noopener"
>≈1.01971e1400&lt;/a> by @The Comamba: $k\cdot 256^{211}+99$，其中&lt;code>k&lt;/code>是一段破解DVD加密的代码的二进制表示。由于这段代码不合法，一个程序员用这个数把它加密成一个质数然后上传到了一个质数网站，也是很有想法了！&lt;/li>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=QqbDLoNHqDk" target="_blank" rel="noopener"
>6.187e34&lt;/a> by @Tom Rocks Maths: $1/l_p$，$l_p$代表普朗克长度。普朗克提出世界不是连续的，因此普朗克常数就可以用来用整数表达这个世界！&lt;/li>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=Zx5B0imgrS8" target="_blank" rel="noopener"
>1 056 006&lt;/a> by @Eddie Woo：悉尼歌剧院房顶的瓷砖数，surprise！哈哈哈哈！&lt;/li>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=_Y-HRGdYr9s" target="_blank" rel="noopener"
>1 597 463 007&lt;/a> by @Rodrigo Aldana: 快速开方算法中的magic常数&lt;code>0x5f3795df&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="其他">其他&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=4g_OjRB0wCE" target="_blank" rel="noopener"
>≈4.3252e19&lt;/a> by @David Dijon 和 @Philip Hintze: 魔方的组合可能数。&lt;/li>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=2SBqn9EaMg0" target="_blank" rel="noopener"
>302 575 350&lt;/a> by @blackpenredpen：买到Mega Million彩票的可能性。&lt;/li>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=P7Fbfu584ts" target="_blank" rel="noopener"
>12 345 679&lt;/a> by @TyYann：也是个很有名的数字了，12345679$\times$11 = 111111111。作者因为小时候的回忆而选择了它。&lt;/li>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=mH0oCDa74tE" target="_blank" rel="noopener"
>≈8.08e53&lt;/a> by @3Blue1Brown：“魔群”（Monster Group）的大小。魔群是“散在单群”（Sporadic Simple Groups）中最大的群。推荐看完整原视频，解释这个概念也是非常麻烦了。。。另外&lt;a class="link" href="https://www.zhihu.com/question/47850518/answer/358979421" target="_blank" rel="noopener"
>知乎这也有个很棒的回答&lt;/a>。这个数是我觉得这系列里面最有意思的，一个数学中应该是非常基础的概念里面竟然会有这么大的尺寸，非常神奇！&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>时间有限，这里只总结了这么多。有一类数字没有加进来，就是专门生成大数字的运算符，所产生的最小数字。。。因为不好打出来所以没放。这个合作系列一共有200多个视频，如果有兴趣的话可以去&lt;a class="link" href="https://www.youtube.com/hashtag/megafavnumbers" target="_blank" rel="noopener"
>Youtube列表里面查看&lt;/a>~另外对有兴趣探寻这些数字游戏的人，我也推荐&lt;a class="link" href="https://projecteuler.net/" target="_blank" rel="noopener"
>Project Euler&lt;/a>，里面有很多找数字的题目，同时满足了对数字的好奇心和编程练习~&lt;/p>
&lt;blockquote>
&lt;h2 id="参考链接">参考链接&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.youtube.com/hashtag/megafavnumbers" target="_blank" rel="noopener"
>Youtube #MegaFavNumbers&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.zhihu.com/question/37164066" target="_blank" rel="noopener"
>数学史上有哪些看似成立的算式形式猜想，最终被某个大数证明不成立？ - 知乎&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://primes.utm.edu/glossary/page.php?sort=LawOfSmall" target="_blank" rel="noopener"
>Law of Small Numbers&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.zhihu.com/question/47850518" target="_blank" rel="noopener"
>数学中的“怪兽群”是什么概念&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://projecteuler.net/" target="_blank" rel="noopener"
>Project Euler&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://johncarlosbaez.wordpress.com/2018/09/20/patterns-that-eventually-fail/" target="_blank" rel="noopener"
>Patterns That Eventually Fail&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote></description></item><item><title>“音频发烧友” / “Audiophile” 入门及杂谈</title><link>https://zyxin.xyz/blog/2020-12/AudiophileIntroduction/</link><pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate><guid>https://zyxin.xyz/blog/2020-12/AudiophileIntroduction/</guid><description>&lt;p>最近买了一些新的耳机，但是买完总感觉自己被收智商税了，于是就查查查了好多资料。这篇文章介绍我理解下音频发烧友的一些词汇是什么意思，如果你不烧耳机音响，但是想了解这个群体的，这个文章也能作为一个入门参考～Hifi领域有很多词汇我也没懂的，我也写在文章里了，如果有老烧路过请指教一二。我尝试用我学过的知识来客观解释音频领域的知识，我没上过信号处理，相关课程只上过自动控制和离散控制。&lt;/p>
&lt;h2 id="发烧到底追求的是什么">发烧到底追求的是什么&lt;/h2>
&lt;p>刚好今天有看到&lt;a class="link" href="https://www.youtube.com/watch?v=rM8sxFxmOUw" target="_blank" rel="noopener"
>一个Youtube视频&lt;/a>讲到，为什么音乐人并不care那些高端的音频设备。视频内容本身的观点是：一方面音乐人更关注的是音乐本身能不能打动人，另一方面是音乐人很多也没有那么多闲钱哈哈哈。以及底下的评论有很多人说自己是pro musician，然后疯狂喷audiophile追求的东西是虚无飘渺的。我承认烧音频领域有很多玄学都是脑放（脑补出来的），但是做耳机解码之类的厂家也是有很多pro audo engineer，不能否认这里面也是有很多技术门道的。根据这一帮自称pro musician的发言，我估计他们也没有多牛，他们的观点也有幸存者偏差在里面，并且本身不同级别不同类型的音乐也有不同的需求，因此这些评论也就看看就好。不过有一点我是同意的，听音乐最重要的还是音乐本身，对音质的追求不应放于对音乐本身的追求之上。&lt;/p>
&lt;p>再打个比方，对音质的追求和对画质的追求其实是相似的，好的（照片）画质能让我们看清楚世界更多的细节，好的音质能让我们更真切地感受到被乐器包围的感觉。音频处理和视频处理也有很多相似的地方，因为他们都经常被看作信号来处理，后文我也会经常拿画质来打比方。&lt;/p>
&lt;h3 id="什么是好的音质">什么是好的音质&lt;/h3>
&lt;p>在找到了自己喜欢的音乐之后，我们当然会希望手里的设备能更好的还原音乐本身，能听到每一点细节。因此对音质好的标准在我看来（我相信也是大多数人的观点），指的是&lt;strong>耳朵听到的声音感觉和你站在录音的地方听到的声音感觉非常相似&lt;/strong>。由此可见在现场听，在乐器和人声面前听才能获得&lt;strong>完美的音质&lt;/strong>，这是音质的金标准。当然这个也不是那么统一的，例如我并不觉得在歌手演唱会听到的音乐会比手机放出来的好听，因为演唱会非常嘈杂并且音响素质也不见得很好；但如果是在音乐厅听交响乐，我可以拍胸脯保证听到的声音远超电子设备播放出来的。又比如我还听很多电子音乐，里面很多音色都是直接合成出来的，那就无法通过这样的标准来定义了，这种情况下最好的音质可以定义成&lt;strong>你听到的声音和音乐人以及调音师想让你听到的声音一致&lt;/strong>。&lt;/p>
&lt;p>上面提到的音质是可以客观定义和测量的，但是另一部分人追求的音质则是他听到的声音符不符合他的口味，例如有些人喜欢温润的女声，有些人喜欢低沉的bass，这些其实都是主观的喜好。这才是发烧友的精髓——定制，就像搞机械键盘什么的，定制和折腾才是发烧友的精髓。不过我对这样的音质并没有什么追求，因为他们通常都可以通过简单的Eq（调整Equilizer）来解决。&lt;/p>
&lt;h3 id="听到的声音的几个指标">听到的声音的几个指标&lt;/h3>
&lt;p>通常对于音频发烧友来说，音质好不好是个比较笼统的词汇，因为音质好大抵是相似的，而音质差则各有各的差法。为了区分这些方面，audiophile们利用以及发明了很多与音质有关的词汇，我把比较常见的以及他们的意思列在下面了&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>声音基本概念&lt;/th>
&lt;th>(声音的本质是声波)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Loudness / 响度&lt;/td>
&lt;td>声波的振幅，通常会取势能来计算平均振幅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tone / 音调&lt;/td>
&lt;td>（简单）声波的频率，真实的声音通常会是多个频率的叠加&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Timbre / 音色&lt;/td>
&lt;td>声波的形状，人通过音色区分声音的来源&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>音频信号&lt;/th>
&lt;th>(如何表征一个音频信号)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Spectrogram / 频谱&lt;/td>
&lt;td>频谱描述信号在各个频率上的幅度，一般通过Fourier变换计算，由于Fourier变换是可逆的，因此频谱可以唯一地对应一段声音&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Frequency (Response) / 频率(响应)&lt;/td>
&lt;td>频率响应描述输入信号和输出信号在频域上的差异&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Phase / 相位&lt;/td>
&lt;td>相位本身指周期信号中信号在周期的哪个位置，但是相位本身很少用，用的更多的是相位差。我们常用的是将相位差推广到非周期信号，然后用来描述多个声道之间的信号时间差&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>可以量化的词汇&lt;/th>
&lt;th>（客观描述音质）&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Bass / 低频&lt;/td>
&lt;td>20Hz-20kHz的低频部分&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Mid / 中频&lt;/td>
&lt;td>20Hz-20kHz的中间部分&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Treble / 高频&lt;/td>
&lt;td>20-20kHz的高频部分&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Imaging / 声像&lt;/td>
&lt;td>声音的定位准不准，与信号相位有关。&lt;a class="link" href="https://www.rtings.com/headphones/tests/sound-quality/imaging" target="_blank" rel="noopener"
>可参考Rtings的测量方法&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Sound Stage / 声场&lt;/td>
&lt;td>感受到的空间大小，听起来音源越分散，声场越大。这个主要是针对耳机还原音箱声场的感觉，具体解释参考&lt;a class="link" href="https://site.douban.com/widget/notes/275603/note/118007253/" target="_blank" rel="noopener"
>豆瓣这篇文章&lt;/a>，测量方法参考&lt;a class="link" href="https://www.rtings.com/headphones/tests/sound-quality/passive-soundstage" target="_blank" rel="noopener"
>Rtings的测试流程&lt;/a>。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Dynamic Range / 动态范围&lt;/td>
&lt;td>在同一段声音里同时表现幅度很大和很小的信号的能力，可以参考图像的HDR技术。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Transient / 瞬态&lt;/td>
&lt;td>这个词我是抱有疑问的，虽然控制器确实有响应时间这个参数，但是用在声音信号上感觉并不算很合适。好像一般通过追踪方波输入来看耳机的瞬态响应。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Signal to Noise Ratio (SNR) / 信噪比&lt;/td>
&lt;td>字面意思，信号对噪声的比。这个噪音通常是音频电路的底噪。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Total Harmonic Distortion (THD) / 总谐波失真&lt;/td>
&lt;td>输入一个纯净正弦信号，输出里这个信号的谐波就是谐波失真。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Intermodulation Distortion (IMD) / 互调失真&lt;/td>
&lt;td>输出两个频率的信号，测输出信号的失真&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Crosstalk / 串扰&lt;/td>
&lt;td>多通道之间的信号干扰&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>玄学词汇&lt;/th>
&lt;th>（主观描述音质）&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Fidelity / Resolution / 解析力&lt;/td>
&lt;td>这个词可能指的是低失真？有时候感觉也指超高频的频率响应。被各种厂家的广告用烂了，没有统一的解释&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Punchy / 力度&lt;/td>
&lt;td>通常指的是低频非常重&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Congested / 拥挤 / Shouty&lt;/td>
&lt;td>大概指的是声场小，或者是中高频gain太高&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Sharp / 锐&lt;/td>
&lt;td>一般是在频谱的某一小段中高频上有刺突&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Clean / Clarity / 通透 / 纯净&lt;/td>
&lt;td>应该都指的是中高频比较突出&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Sound quality / 音质&lt;/td>
&lt;td>虽然这里我们客观地讨论了什么是好音质，但是在audiophile社区里面这个词并不都是这么定义的&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tonality / 调性&lt;/td>
&lt;td>这个词我着实没弄懂，本身是用来形容乐曲的谱调的，但是用来形容音质我也摸不找头脑&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Layered / 层次感&lt;/td>
&lt;td>这虽然我知道是什么意思，以及能听出来区别，但是觉得这个词很模糊。我猜测它与声像和声场都有关。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>其中低中高频的区别这里贴一张引自crinacle的图&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;p>&lt;img src="https://zyxin.xyz/blog/blog/2020-12/AudiophileIntroduction/fr-chart.png"
width="634"
height="699"
loading="lazy"
alt="频率对应图"
class="gallery-image"
data-flex-grow="90"
data-flex-basis="217px"
>&lt;/p>
&lt;h3 id="人能听出多大差别">人能听出多大差别&lt;/h3>
&lt;p>在定义了什么是好音质以后，还有个问题是人能听出来多大的音质差别？首先一个基本常识是人的听力范围是在20Hz-20kHz之间（也有说16Hz-20kHz的），这是目前通用的标准，包括音频的采样率定在44100Hz也是参考了这个数据。另外在&lt;a class="link" href="https://www.zhihu.com/question/274582289/answer/640857360" target="_blank" rel="noopener"
>这个知乎回答&lt;/a>里面，答主引用了这些数据：&lt;/p>
&lt;blockquote>
&lt;p>人耳所能感知到的纯单音变化最小幅度为0.3dB
人耳在最敏感的500Hz~2kHz段所能感知到的频率变化一般是0.2%
人耳所能感知的低次谐波失真变化最小量一般在1%上下&lt;/p>
&lt;/blockquote>
&lt;p>以上这些数据可以作为参考，但是它们并不能作为硬性指标，例如说音频信号超过20kHz的部分就是完全没有意义的，我认为是不科学的。一是因为以上都是统计数据，不能否认现实世界有“金耳朵”的存在（不过至少我不是），二是以上数据来源于科学实验，其实验过程与我们听音乐的时候可能并不相同，有可能会导致音频敏感度的差别。不过至少这些数据让我们有一个大概的概念，如果一个音频设备带来的提升远小于这些数，那么极大概率你是听不出他们带来的区别的。&lt;/p>
&lt;h2 id="发烧友字典">发烧友字典&lt;/h2>
&lt;p>Hifi界另外一些让人摸不着头脑的地方就是，各种各样的词汇，以及这些词汇似乎指向的东西有时候也很不明确。。。这里把我自己学到的记一下。&lt;/p>
&lt;h3 id="音乐播放器系统组成">音乐播放器系统组成&lt;/h3>
&lt;p>我们这里不考虑录音室的系统组成，而只考虑用户的系统组成。&lt;/p>
&lt;h4 id="音源">音源&lt;/h4>
&lt;p>好像音源又叫&lt;strong>前端&lt;/strong>？整那么邪乎干啥。。。音源有CD机、电脑、唱片机（俗称转盘turntable？），因为现在都是数字音乐了，因此重要的就是源文件的音质。音频格式有很多说法，首先分PCM和DSD两种，PCM是时域采样而DSD是频域采样。PCM又有很多指标，例如位深指音频每个采样的精度（通常是16bit，HiRes则有24bit以上），采样率指采样的频率，根据Nyquist-Shannon采样定律，频率高于20kHz理论上就能做到无损采样。然后音乐文件的格式又分有损和无损，有损格式如果比特率足够高还行，如果很低那就会非常严重地影响音质。然后音源会输出到数字界面。&lt;/p>
&lt;h4 id="数字界面">数字界面&lt;/h4>
&lt;p>虽然机油送我了一个数字界面，但是我并不能听出区别，以及我到现在也不是很清楚这个界面是干什么的。根据&lt;a class="link" href="https://www.zhihu.com/question/30806888/answer/50247612" target="_blank" rel="noopener"
>我知乎看到的资料&lt;/a>，数字界面是把USB信号转换成DAC芯片能够直接读取的信号。外置数字界面的好处一个是时钟（可能）比内置更加精确，另一个是给没有USB或者火线（IEEE-1394协议）接口的DAC提供输入。这里就涉及另一个玄学的概念，叫&lt;strong>时钟抖动（Jitter）&lt;/strong>。由于数字信号的采样（指PCM）是恒定频率的，因此如果数字线路的时钟频率不稳定，是会非常影响DAC转换结果的。抖动可以来源于时钟本身（如晶振），也可能来源于数字信号传输的接口芯片。不过就像知乎另一个回答说的，一般这种抖动都非常非常细微，我并不认为这对信号能有太多影响，并且我确实也听不出来。想感受一下多玄学的可以再看看&lt;a class="link" href="http://www.erji.net/forum.php?mod=viewthread&amp;amp;tid=7494&amp;amp;extra=pageD1&amp;amp;page=" target="_blank" rel="noopener"
>耳机大家庭的文章&lt;/a>。。。&lt;/p>
&lt;h4 id="解码器digital-analog-converterdac">解码器（Digital-Analog Converter，DAC）&lt;/h4>
&lt;p>DAC就是数模转换器，用来将数字信号转成模拟信号。这个过程我觉得挺重要的，因为数模转换（模数转换）带来的信号损失还是很明显的。从控制理论里的零阶保持（ZOH）来理解的话，&lt;a class="link" href="https://www.dummies.com/education/science/science-engineering/real-world-signals-and-systems-case-solving-the-dac-zoh-droop-problem-in-the-z-domain/" target="_blank" rel="noopener"
>转换过程会影响信号的相位和高频&lt;/a>。DAC的质量在整个音频管道中还是比较重要的。另外一个特性是DAC支持的格式，现在主流的hifi解码都支持高位深和DSD的音频了。&lt;/p>
&lt;h4 id="放大器amplifieramp">放大器（Amplifier，Amp）&lt;/h4>
&lt;p>用于音箱的一般称功放（功率放大器），用于耳机的一般称耳放。放大器的作用就是把解码出来的模拟信号放大到合适的音量。很多设备如手机，甚至一些DAC都把功放集成进去了。独立的放大器设备有两个好处，一个的更好的电磁隔离，更少的底噪，另一个是可以提供更大的功率储备，用来推特别难推的耳机（如低阻低灵敏度的耳机），在极端状态下可以减少失真。&lt;/p>
&lt;p>耳放还分两种：电子管耳放（胆机），晶体管耳放（石机）。我没听过胆机，但都说胆机声音温润，估计说到底就是胆机削低了高频。因此如果纯音质角度看，选一个低失真的耳放就可以了。&lt;/p>
&lt;p>功放有时分前级后级，据我查到的资料说，前级是low-pass filter，用来处理低频，然后后级整体放大？这里我也不懂了，搜到各种不一样的说法，我觉得我还是别管这玩意了。（&lt;a class="link" href="https://www.zhihu.com/question/30806888" target="_blank" rel="noopener"
>知乎参考在此&lt;/a>）&lt;/p>
&lt;h4 id="接口">接口&lt;/h4>
&lt;p>再讲一下不同音频设备之间的连接接口，数字的接口一般就是USB和S/PDIF了，模拟信号主要有TRS，TRRS，XLR等等，可以&lt;a class="link" href="http://sound.zol.com.cn/512/5124960_all.html" target="_blank" rel="noopener"
>参考这篇文章&lt;/a>。这些接口本身没什么差别，虽然说有人对这个很在意，甚至还有人对墙上插座的接口很讲究，但是我觉得这都是玄学= =（就是不科学）&lt;/p>
&lt;h4 id="回放设备">回放设备&lt;/h4>
&lt;p>就是音箱或者耳机，这玩意也是有各种产品。音箱分有源音箱和无源音箱，有源就是内置了放大器的。耳机则分入耳（In-ear, IEM），和头戴式耳机（On-ear/Over-ear）。具体这就不展开了。&lt;/p>
&lt;h3 id="耳机相关">耳机相关&lt;/h3>
&lt;h4 id="单元">单元&lt;/h4>
&lt;ul>
&lt;li>Balanced Armerture / BA / 动铁：平衡铁通过磁场变化，带动振膜运动。&lt;/li>
&lt;li>Dynamic Driver / DD / 动圈：磁场直接驱动线圈，带动振膜运动。&lt;/li>
&lt;li>Planar Magnetic / 平板：磁场直接驱动金属板运动。&lt;/li>
&lt;li>Piezoelectric Ceramic / 压电陶瓷单元：压电晶体带动振膜变形发声。&lt;/li>
&lt;li>Electrostatic / EST / 静电：电场带动振膜运动。
(可以参见&lt;a class="link" href="https://www.youtube.com/watch?v=BKhS7X8rs74" target="_blank" rel="noopener"
>Linus的视频&lt;/a>)&lt;/li>
&lt;/ul>
&lt;h4 id="线材">线材&lt;/h4>
&lt;p>首先要说明的是，音频线材对声音的影响微乎其微。线材影响声音的原理是不同线材有不同的阻抗、容抗和感抗曲线（主要是阻抗和容抗），因此可能会微微影响低阻耳机的频率响应。另外，说线材能提升音质的基本就是扯淡。参见&lt;a class="link" href="https://www.zhihu.com/question/274582289" target="_blank" rel="noopener"
>该知乎回答&lt;/a>。&lt;/p>
&lt;ul>
&lt;li>TPC: 电解铜&lt;/li>
&lt;li>OFC: 无氧铜&lt;/li>
&lt;li>OCC: 单结晶无氧铜&lt;/li>
&lt;li>5N/6N/7N：（铜）纯度，几个N就有几个9。&lt;/li>
&lt;li>Litz/Litz2：绕线方式，参考&lt;a class="link" href="https://www.newenglandwire.com/product/litz-wire-types-and-constructions/" target="_blank" rel="noopener"
>Litz官网&lt;/a>。并不知道不同绕线方法对感抗有没有什么影响。。
现在的线材基本都是无氧铜。个人认为为了好看和功能换线可以，为了换口味换线可以，为了增加屏蔽层减少外部信号噪音可以，但是为了“提升音质”就纯粹是智商税了。另外上面提到的都是传递模拟信号的线材，对那种audio-grade的USB线我是打死都不信有什么区别的，数字信号对这么点阻抗的变化根本不可能有什么反应。&lt;/li>
&lt;/ul>
&lt;h4 id="耳塞耳垫">耳塞/耳垫&lt;/h4>
&lt;p>耳塞(Tip)和耳垫(Pad)可以影响声音在进入耳朵之前的回响，因此也是会改变声音的。耳垫的影响比较大，耳塞我觉得比较小。不过同样的，我认为不同的耳塞耳垫都是相当于给耳机加了EQ，因此不必追求高音质的耳垫。有一点例外，如果耳塞耳垫有漏音的话，会严重影响音质，这种情况下就需要更换了。&lt;/p>
&lt;hr>
&lt;p>这大概就是我对audiophile各种知识的笔记了。在了解这么多之后，我还是觉得，选一个小巧、功能多、性能还过得去的DAC和amp，然后选个音质够用的耳机就行了，不用再换了。音质这玩意到最后音质提升的性价比实在太低了，还是找更多好听的音乐来的实在。&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a class="link" href="https://crinacle.com/2020/04/08/graphs-101-how-to-read-headphone-measurements/" target="_blank" rel="noopener"
>Graphs 101: How to Read Headphone Measurements&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item></channel></rss>